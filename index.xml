<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HodDB</title>
    <link>http://hoddb.org/index.xml</link>
    <description>Recent content on HodDB</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://hoddb.org/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Installing</title>
      <link>http://hoddb.org/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://hoddb.org/installation/</guid>
      <description>

&lt;h3 id=&#34;docker&#34;&gt;Docker&lt;/h3&gt;

&lt;p&gt;If you have &lt;a href=&#34;https://docs.docker.com/engine/installation/&#34;&gt;Docker installed&lt;/a&gt;, then HodDB can be started by first pulling the latest &lt;code&gt;gtfierro/hod&lt;/code&gt; Docker image and then starting it with the appropriate parameters.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker pull gtfierro/hod
$ docker run -d --name hoddb -p47808:47808 gtfierro/hod
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This Docker image comes with the &lt;a href=&#34;https://raw.githubusercontent.com/gtfierro/hod/master/buildings/berkeley.ttl&#34;&gt;Soda Hall Brick file&lt;/a&gt; preloaded.
The HTTP interface will be available at &lt;a href=&#34;http://localhost:47808&#34;&gt;http://localhost:47808&lt;/a&gt;; the exposed port is configurable via the &lt;code&gt;docker run&lt;/code&gt; command above.&lt;/p&gt;

&lt;p&gt;To build your own Docker image, use the template &lt;a href=&#34;https://github.com/gtfierro/brick_database_eval/tree/master/hod&#34;&gt;provided here&lt;/a&gt;, adjusting &lt;code&gt;build.sh&lt;/code&gt; and &lt;code&gt;Dockerfile&lt;/code&gt; to load the correct &lt;code&gt;.ttl&lt;/code&gt; file representing the building.&lt;/p&gt;

&lt;p&gt;As HodDB matures it will be possible to load buildings over the HTTP interface, but this is not currently supported.&lt;/p&gt;

&lt;h3 id=&#34;binary&#34;&gt;Binary&lt;/h3&gt;

&lt;p&gt;To have slightly more control over the installation, a binary and configuration file can be downloaded from &lt;a href=&#34;https://github.com/gtfierro/hod/releases/latest&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This will require the installation of the &lt;a href=&#34;http://librdf.org/raptor/&#34;&gt;Raptor RDF Syntax Library&lt;/a&gt;, which can be done over &lt;code&gt;apt&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo apt intsall libraptor2-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After unpacking the archive, HodDB can be started via the command line:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./hod 
NAME:
   hod - BRICK database and query engine

USAGE:
   hod [global options] command [command options] [arguments...]

VERSION:
   0.2

COMMANDS:
     benchload  Benchmark loading a turtle file
     dump       Dump contents of turtle file
     viewclass  PDF visualization of class structure of file
     dumpgraph  PDF visualization of TTL file. WARNING this can get really big
     load       Load dataset into hoddb
     loadLinks  Load link json file into hoddb
     cli        Start hoddb from existing database
     http       Start hoddb HTTP server from existing database
     help, h    Shows a list of commands or help for one command

GLOBAL OPTIONS:
   --help, -h     show help
   --version, -v  print the version
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You may see an error print out looking something like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./hod: /usr/local/lib/libraptor2.so.0: no version information available (required by ./hod)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;but HodDB should perform normally. Please &lt;a href=&#34;https://github.com/gtfierro/hod/issues&#34;&gt;file an issue&lt;/a&gt; if you notice anything.&lt;/p&gt;

&lt;p&gt;Note: current releases are just for 64-bit Linux. This will change as HodDB matures.&lt;/p&gt;

&lt;h3 id=&#34;source&#34;&gt;Source&lt;/h3&gt;

&lt;p&gt;HodDB can also be installed from source. This method is good for developing HodDB, or alternatively staying up to date with the &amp;ldquo;bleeding edge&amp;rdquo;, which is probably only good if you need the latest fixes and can&amp;rsquo;t wait for an official release.&lt;/p&gt;

&lt;p&gt;To install/update HodDB, you need &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Go&lt;/a&gt; installed and your &lt;code&gt;$GOPATH&lt;/code&gt; and &lt;code&gt;$GOROOT&lt;/code&gt; environment variables configured (how to set these is discussed in the Go installation guide), as well as &lt;code&gt;$GOPATH/bin&lt;/code&gt; added to your &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go get -u github.com/gtfierro/hod
$ go install github.com/gtfierro/hod
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After this, then HodDB can be executed on the command line:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hod 
NAME:
   hod - BRICK database and query engine

USAGE:
   hod [global options] command [command options] [arguments...]

VERSION:
   0.2

COMMANDS:
     benchload  Benchmark loading a turtle file
     dump       Dump contents of turtle file
     viewclass  PDF visualization of class structure of file
     dumpgraph  PDF visualization of TTL file. WARNING this can get really big
     load       Load dataset into hoddb
     loadLinks  Load link json file into hoddb
     cli        Start hoddb from existing database
     http       Start hoddb HTTP server from existing database
     help, h    Shows a list of commands or help for one command

GLOBAL OPTIONS:
   --help, -h     show help
   --version, -v  print the version
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Configuring</title>
      <link>http://hoddb.org/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://hoddb.org/configuration/</guid>
      <description>&lt;p&gt;HodDB is configured with a YAML file. By default, this file is called &lt;code&gt;hodconfig.yml&lt;/code&gt; and is loaded from the curren directory, though this can be changed with the &lt;code&gt;--config/-c&lt;/code&gt; command line option when executing the &lt;code&gt;hod&lt;/code&gt; binary.&lt;/p&gt;

&lt;p&gt;Configuration defaults are as follows; there&amp;rsquo;s usually no reason to change these aside from the network configuration.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;### HodDB Configuration
# commented out lines are default configuration options

####
# Location and structure of database
####

# the location of the database files
#DBPath = _hoddb

# the path to the TTL file containing Brick relationships
#BrickFrameTTL = &amp;quot;BrickFrame.ttl&amp;quot;

# the path to the TTL file containing Brick classes
#BrickClassTTL = &amp;quot;Brick.ttl&amp;quot;
#

####
# configuration for verbosity during operation
####

# Show the built dependency graph of query terms
#ShowDependencyGraph: false

# Show the set of operations in the query plan
#ShowQueryPlan: false

# Show the latencies of creating the query plan
#ShowQueryPlanLatencies: false

# Show the latencies of each operation in the query plan
#ShowOperationLatencies: false

# Show the full latency of the query (and its larger components)
#ShowQueryLatencies: true


####
# HTTP Server Configuration
####

# port to run the server on
#ServerPort: 47808

# Whether or not to serve on IPv6
#UseIPv6: false

# Whether or not to serve on localhost. If false, serves on a public interface
#Localhost: true

####
# Profiling Information for HTTP Server
####
# Note that best practices dictate that these be done in a mutually exclusive
# manner, e.g. do not enable CPU and MEM profiling at the same time because
# they will end up measuring the effect of measuring
# Also note that if you are trying to use the net/http/profile trick for generating
# torch graphs, you will need to keep these both at false

# Enable CPU profile
#EnableCPUProfile: false

# Enable MEM profile
#EnableMEMProfile: false

# Enable Block profile
#EnableBlockProfile: false
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>HodDB</title>
      <link>http://hoddb.org/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://hoddb.org/</guid>
      <description>

&lt;h2 id=&#34;an-rdf-like-database-for-brick&#34;&gt;An RDF-like Database for Brick&lt;/h2&gt;

&lt;p&gt;An outline for the documentation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Index Page:

&lt;ul&gt;
&lt;li&gt;brief introduction (and links) to Brick&lt;/li&gt;
&lt;li&gt;identify need for fast Brick database&lt;/li&gt;
&lt;li&gt;HodDB features:

&lt;ul&gt;
&lt;li&gt;sub 100ms queries&lt;/li&gt;
&lt;li&gt;links to external services such as timeseries uuids&lt;/li&gt;
&lt;li&gt;history of building configuration (work-in-progress)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Installing/Buildiing HodDB&lt;/li&gt;
&lt;li&gt;Configuring HodDB&lt;/li&gt;
&lt;li&gt;Using HodDB

&lt;ul&gt;
&lt;li&gt;Loading data into HodDB&lt;/li&gt;
&lt;li&gt;CLI queries&lt;/li&gt;
&lt;li&gt;HTTP server + features&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;HodDB Query language:

&lt;ul&gt;
&lt;li&gt;basics:

&lt;ul&gt;
&lt;li&gt;prefixes&lt;/li&gt;
&lt;li&gt;triples&lt;/li&gt;
&lt;li&gt;path types&lt;/li&gt;
&lt;li&gt;OR clauses&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;links&lt;/li&gt;
&lt;li&gt;example queries explained!&lt;/li&gt;
&lt;li&gt;make sure to have figures&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
